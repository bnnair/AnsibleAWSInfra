# AWS playbook
---
- hosts: localhost
  connection: local
  gather_facts: False

  vars:
    project_name: ansible-demo
    env: dev
    region: us-east-1
    image: ami-00514a528eadbc95b
    security_group: jenkins-master
    user_id: ec2-user
    hostpath: ./hosts
    hoststring: 'ansible_ssh_user=ec2-user ansible_ssh_private_key_file=aws-private.pem'

  become: yes

  tasks:
    - name: provisioning EC2 instances for webservers
      block:
        - name: Create an EC2 key
          ec2_key:
            name: '{{ project_name }}-{{ env }}-key'
            region: '{{ region }}'
          register: ec2_key

        - name: Save private key
          copy: content="{{ ec2_key.key.private_key }}" dest="aws-private.pem" mode=0600
          when: ec2_key.changed

        - name: Create an EC2 instance(s)
          ec2:
            aws_access_key: '{{ec2_access_key}}'
            aws_secret_key: '{{ec2_secret_key}}'
            key_name: '{{ project_name }}-{{ env }}-key'
            group: '{{ security_group }}'
            image: '{{ image }}'
            instance_type: t2.micro
            region: '{{ region }}'
            wait: true
            wait_timeout: 200
            exact_count: 2
            count_tag:
              Name: webserver
            instance_tags:
              Name: node
              role: webserver
          register: ec2

        - name: Add the newly created EC2 instance(s) to host group
          lineinfile: dest={{ hostpath }}
            regexp={{ item.public_ip }}
            insertafter="[webserver]"
            line="{{ item.public_ip }} {{hoststring}}"
            state=present
          with_items: '{{ ec2.instances }}'

        - wait_for: path={{ hostpath }} search_regex={{hoststring}}

        - name: Wait for SSH to come up
          local_action: wait_for
            host={{ item.public_ip }}
            port=22
            state=started
          with_items: '{{ ec2.instances }}'

        - name: Add new instance to host group
          add_host:
            hostname: '{{ item.public_ip }}'
            groups: ec2web
          loop: '{{ ec2.instances }}'

      tags: ['never', 'ec2web']

- hosts: ec2web
  name: configuration for webserver
  user: ec2-user
  vars:
    req_java: java-1.8.0-openjdk
    set_java: jre-1.8.0-openjdk
  become: yes
  gather_facts: true

  tasks:
    - name: Add a group called developer
      group:
        name: developer
        state: present

    - name: create user "ansadmin"
      user: name=ansadmin comment="The ansible user" group=developer shell=/bin/bash

    - name: updating repos
      yum:
        name: '*'
        state: latest

    - name: remove previous installed java
      yum:
        name: java-1.7*
        state: absent
      ignore_errors: yes

    - name: installing required java
      yum:
        name: '{{ req_java }}'
        state: present

    - name: Setting default Java
      alternatives:
        name: java
        link: /usr/bin/java
        path: /usr/lib/jvm/{{ set_java }}/bin/java
